name: Create and publish tamarin images

on:
  push:
    tags:
      - 'v*'
    branches:
      - 'feature'

jobs:
  push_to_registries:
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract version from tag or branch
        id: extract_tag_or_branch
        run: |
            if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
                VERSION=${GITHUB_REF#refs/tags/}
                echo "VERSION=$VERSION" >> $GITHUB_ENV
            else
                COMMIT_MESSAGE=$(git log -1 --pretty=%B)
                echo "Commit message: $COMMIT_MESSAGE"
                if [[ "$COMMIT_MESSAGE" =~ \$TAG\$(.+?)\$ ]]; then
                    TAG=${BASH_REMATCH[1]}
                    echo "VERSION=$TAG" >> $GITHUB_ENV
                else
                    echo "No valid TAG found in commit message."
                    exit 1
                fi
            fi
        env:
          GITHUB_REF: ${{ github.ref }}

      - name: Run download.sh script
        run: bash scripts/download.sh

      - name: Build and push Docker image
        run: |
          docker build -t ghcr.io/${{ github.repository }}/cli:${{ env.VERSION }} \
                      -t ghcr.io/${{ github.repository }}/cli:latest \
                      -f Dockerfile-cli .
          docker push ghcr.io/${{ github.repository }}/cli:${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository }}/cli:latest

          docker build -t ghcr.io/${{ github.repository }}/ssh:${{ env.VERSION }} \
                      -t ghcr.io/${{ github.repository }}/ssh:latest \
                      -f Dockerfile-ssh .
          docker push ghcr.io/${{ github.repository }}/ssh:${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository }}/ssh:latest

          docker build -t ghcr.io/${{ github.repository }}/toolbox:${{ env.VERSION }} \
                      -t ghcr.io/${{ github.repository }}/toolbox:latest \
                      -f Dockerfile-toolbox .
          docker push ghcr.io/${{ github.repository }}/toolbox:${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository }}/toolbox:latest
